# Лабораторна робота 1. Вступ до машинного навчання. Елементи лінійної алгебри.
# Варіант 10

# Завдання 1.
# Створіть одновимірний масив (вектор) з перших 10 піднесених до квадрату натуральних чисел та виведіть його значення.
import numpy as np

vector = np.array([i**2 for i in range(1, 11)])
print("Завдання 1. Вектор з перших 10 піднесених до квадрату натуральних чисел:")
print(vector)

# Завдання 2.
# Створіть двовимірний масив (матрицю) розміром 3x3, заповніть його значеннями квадратних коренів від кожного натурального числа, починаючи з 1, та виведіть його значення.
matrix_sqrt = np.sqrt(np.arange(1, 10).reshape(3, 3))
print("\nЗавдання 2. Матриця 3x3 з квадратних коренів від кожного натурального числа, починаючи з 1:")
print(matrix_sqrt)

# Завдання 3.
# Створіть масив розміром 3x3, заповніть його випадковими цілими числами в діапазоні від 0 до 5 та виведіть його значення.
matrix_random_int = np.random.randint(0, 6, (3, 3))
print("\nЗавдання 3. Матриця 3x3, заповнена випадковими цілими числами в діапазоні від 0 до 5:")
print(matrix_random_int)

# Завдання 4.
# Створіть масив розміром 5x5, заповніть його випадковими дійсними числами в діапазоні від 0 до 1 та обчисліть суму елементів, які менше середнього значення.
matrix_random_float = np.random.rand(5, 5)
mean_value = matrix_random_float.mean()
sum_less_than_mean = matrix_random_float[matrix_random_float < mean_value].sum()
print("\nЗавдання 4. Сума елементів масиву 5x5, які менше середнього значення:")
print(sum_less_than_mean)

# Завдання 5.
# Створіть два одновимірних масиви розміром 5, заповніть їх випадковими цілими числами від 1 до 30 та виконайте на них поелементні операції додавання, віднімання та множення.
array1 = np.random.randint(1, 31, 5)
array2 = np.random.randint(1, 31, 5)
addition = array1 + array2
subtraction = array1 - array2
multiplication = array1 * array2
print("\nЗавдання 5. Поелементні операції над двома масивами:")
print("Масив 1:", array1)
print("Масив 2:", array2)
print("Додавання:", addition)
print("Віднімання:", subtraction)
print("Множення:", multiplication)

# Завдання 6.
# Створіть дві матриці 3x3, заповніть їх довільними дійсними числами від 0 до 1 та знайдіть їх добуток.
matrix1 = np.random.rand(3, 3)
matrix2 = np.random.rand(3, 3)
product = np.dot(matrix1, matrix2)
print("\nЗавдання 6. Добуток двох матриць 3x3:")
print("Матриця 1:")
print(matrix1)
print("Матриця 2:")
print(matrix2)
print("Добуток матриць:")
print(product)

# Завдання 7.
# Створіть дві матриці розміром 2x3 та 3x2, заповніть їх випадковими цілими числами в діапазоні від 1 до 5 та перемножте їх між собою.
matrix3 = np.random.randint(1, 6, (2, 3))
matrix4 = np.random.randint(1, 6, (3, 2))
product_2x3_3x2 = np.dot(matrix3, matrix4)
print("\nЗавдання 7. Добуток матриць 2x3 та 3x2:")
print("Матриця 1 (2x3):")
print(matrix3)
print("Матриця 2 (3x2):")
print(matrix4)
print("Добуток матриць:")
print(product_2x3_3x2)

# Завдання 8.
# Створіть матрицю розміром 3x3, заповніть її випадковими цілими числами в діапазоні від 1 до 10 та знайдіть її обернену матрицю.
matrix_3x3 = np.random.randint(1, 11, (3, 3))
inverse_matrix = np.linalg.inv(matrix_3x3)
print("\nЗавдання 8. Обернена матриця для матриці 3x3:")
print("Оригінальна матриця:")
print(matrix_3x3)
print("Обернена матриця:")
print(inverse_matrix)

# Завдання 9.
# Створіть матрицю розміром 5x5, заповніть її випадковими дійсними числами в діапазоні від 0 до 1 та транспонуйте її.
matrix_5x5 = np.random.rand(5, 5)
transposed_matrix = matrix_5x5.T
print("\nЗавдання 9. Транспонована матриця для матриці 5x5:")
print("Оригінальна матриця:")
print(matrix_5x5)
print("Транспонована матриця:")
print(transposed_matrix)

# Завдання 10.
# Створіть матрицю розміром 3x4 та вектор розміром 4x1, заповніть матрицю випадковими цілими числами в діапазоні від -5 до 5, а вектор - випадковими дійсними числами від 0 до 1 і знайдіть добуток матриці на вектор.
matrix_3x4 = np.random.randint(-5, 6, (3, 4))
vector_4x1 = np.random.rand(4, 1)
product_matrix_vector = np.dot(matrix_3x4, vector_4x1)
print("\nЗавдання 10. Добуток матриці 3x4 на вектор 4x1:")
print("Матриця 3x4:")
print(matrix_3x4)
print("Вектор 4x1:")
print(vector_4x1)
print("Добуток матриці на вектор:")
print(product_matrix_vector)

# Завдання 11.
# Створіть матрицю розміром 2x3 та вектор розміром 3x1, заповніть матрицю випадковими дійсними числами від 0 до 1, а вектор - випадковими дійсними числами від 0 до 1, і знайдіть добуток матриці на вектор.
matrix_2x3 = np.random.rand(2, 3)
vector_3x1 = np.random.rand(3, 1)
product_matrix_vector_2x3 = np.dot(matrix_2x3, vector_3x1)
print("\nЗавдання 11. Добуток матриці 2x3 на вектор 3x1:")
print("Матриця 2x3:")
print(matrix_2x3)
print("Вектор 3x1:")
print(vector_3x1)
print("Добуток матриці на вектор:")
print(product_matrix_vector_2x3)

# Завдання 12.
# Створіть дві матриці розміром 3x3, заповніть їх випадковими цілими числами в діапазоні від 1 до 10 та знайдіть суму всіх елементів обох матриць.
matrix_a = np.random.randint(1, 11, (3, 3))
matrix_b = np.random.randint(1, 11, (3, 3))
sum_of_elements = matrix_a.sum() + matrix_b.sum()
print("\nЗавдання 12. Сума всіх елементів двох матриць 3x3:")
print("Матриця 1:")
print(matrix_a)
print("Матриця 2:")
print(matrix_b)
print("Сума всіх елементів обох матриць:")
print(sum_of_elements)

# Завдання 13.
# Створіть дві матриці розміром 2x2, заповніть їх випадковими цілими числами в діапазоні від 1 до 10 та знайдіть різницю їх елементів.
matrix_2x2_1 = np.random.randint(1, 11, (2, 2))
matrix_2x2_2 = np.random.randint(1, 11, (2, 2))
difference = matrix_2x2_1 - matrix_2x2_2
print("\nЗавдання 13. Різниця елементів двох матриць 2x2:")
print("Матриця 1:")
print(matrix_2x2_1)
print("Матриця 2:")
print(matrix_2x2_2)
print("Різниця:")
print(difference)

# Завдання 14.
# Створіть матрицю розміром 3x3, заповніть її випадковими цілими числами в діапазоні від 1 до 5 та знайдіть кількість парних елементів матриці.
matrix_3x3_even = np.random.randint(1, 6, (3, 3))
even_count = np.sum(matrix_3x3_even % 2 == 0)
print("\nЗавдання 14. Кількість парних елементів в матриці 3x3:")
print("Матриця:")
print(matrix_3x3_even)
print("Кількість парних елементів:")
print(even_count)

# Висновок: В результаті виконання лабораторної роботи, я ознайомився з основними елементами лінійної алгебри, такими як вектори та матриці, і навчився виконувати на них різні операції за допомогою бібліотеки NumPy в Python.
